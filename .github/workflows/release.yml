name: Create Release for Version Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Create release
      uses: Roang-zero1/github-create-release-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    needs: [release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            output-name: github-api_linux-gnu
          - os: macOS-latest
            output-name: github-api_darwin
          - os: windows-latest
            output-name: github-api.exe
  
    steps:
      - name: Install Dart
        uses: DanTup/gh-actions/setup-dart@master
  
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Install dependencies
        run: dart pub get
  
      - name: Compile binary file
        run: dart2native bin/github_api.dart -v -o build/${{ matrix.output-name }}
  
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
  
      - name: Get Release File Name & Upload URL
        id: get_release_info
        run: |
          echo ::set-output name=file_name::${REPOSITORY_NAME##*/}-${TAG_REF_NAME##*/v}
          value=`cat release_url/release_url.txt`
          ls release_url/
          cat release_url/release_url.txt
          echo $value
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}        
  
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./build/${{ matrix.output-name }}
          asset_name: ${{ matrix.output-name }}
          asset_content_type: application/octet-stream     
        

       
